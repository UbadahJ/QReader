import java.lang.Boolean;

-- TABLE

CREATE TABLE BaseBook
(
    id          TEXT               NOT NULL,
    name        TEXT               NOT NULL,
    lastUpdated TEXT               NOT NULL,
    completed   INTEGER AS Boolean NOT NULL,
    inLibrary   INTEGER AS Boolean DEFAULT 0 NOT NULL,
    isAvailable INTEGER AS Boolean DEFAULT 1 NOT NULL,
    PRIMARY KEY (id)
);

CREATE VIEW Book AS
SELECT
    b.id,
    b.name,
    b.lastUpdated,
    b.completed,
    m.link,
    m.author,
    m.coverPath,
    m.category,
    m.description,
    m.rating,
    b.isAvailable,
    b.inLibrary,
    m.enableNotification
FROM BaseBook b
LEFT JOIN Metadata m ON b.id == m.bookId;

-- QUERIES

getAll:
SELECT *
FROM Book;

getAllLibraryBooks:
SELECT *
FROM Book
WHERE inLibrary = 1;

getById:
SELECT *
FROM Book
WHERE id = ?;

getByName:
SELECT *
FROM Book
WHERE name LIKE ?;

insert:
INSERT OR IGNORE INTO BaseBook(id, name, lastUpdated, completed, inLibrary, isAvailable)
VALUES ?;

insertByValues:
INSERT INTO BaseBook(id, name, lastUpdated, completed)
VALUES (? , ?, ?, ?);

update:
UPDATE BaseBook
SET name = ?, lastUpdated = ?, completed = ?
WHERE id = ?;

setAvailable:
UPDATE BaseBook
SET isAvailable = ?
WHERE id = ?;

overwrite:
UPDATE BaseBook
SET name = ?, lastUpdated = ?, completed = ?, inLibrary = ?, lastUpdated = ?
WHERE id = ?;

upsert {
    UPDATE BaseBook
    SET name = :name, lastUpdated = :lastUpdated, completed = :completed
    WHERE id = :id;

    INSERT OR IGNORE INTO BaseBook(id, name, lastUpdated, completed)
    VALUES (:id, :name, :lastUpdated, :completed);
}

deleteById:
DELETE
FROM BaseBook
WHERE id = ?;

addToLibrary:
UPDATE BaseBook
SET inLibrary = 1
WHERE id = ?;

removeFromLibrary:
UPDATE BaseBook
SET inLibrary = 0
WHERE id = ?;

chapters:
SELECT *
FROM `Group`
WHERE bookId = ?
ORDER BY CAST(TRIM(SUBSTR(text, 1, INSTR(text, '-') - 1)) AS INTEGER);

markAllRead:
UPDATE `Group`
SET lastRead = CAST(TRIM(SUBSTR(text, INSTR(text, '-') + 1)) AS INTEGER)
WHERE bookId = ?;